pipeline {
     agent any
     environment {
          BUILD_TIMESTAMP = "${env.BUILD_ID}"
     }
     triggers {
          pollSCM('* * * * *')
     }
     stages {
          stage("Compile") {
               steps {
                    sh "cd Chapter08/sample1 && ./gradlew compileJava"
               }
          }
          stage("Unit test") {
               steps {
                    sh "cd Chapter08/sample1 && ./gradlew test"
               }
          }
          stage("Code coverage") {
               steps {
                    sh "cd Chapter08/sample1 && ./gradlew jacocoTestReport"
                    sh "cd Chapter08/sample1 && ./gradlew jacocoTestCoverageVerification"
               }
          }
          stage("Static code analysis") {
               steps {
                    sh "cd Chapter08/sample1 && ./gradlew checkstyleMain"
               }
          }
          stage('Checkstyle analysis') {
              steps {
                  sh """
                      cd Chapter08/sample1
                      ./gradlew checkstyleMain
                  """
                  publishHTML (
                      target: [
                          reportDir: 'Chapter08/sample1/build/reports/checkstyle',
                          reportFiles: 'main.html',
                          reportName: "jacoco checkstyle"
                      ]
                  )
              }
          }
          stage("Package") {
               steps {
                    sh "cd Chapter08/sample1 && ./gradlew build"
               }
          }

          stage("Docker build") {
               steps {
                    sh "cd Chapter08/sample1 && docker build -t aleccoughlin/calculator:${BUILD_TIMESTAMP} ."
               }
          }

          stage("Docker login") {
               steps {
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'docker-hub-credentials',
                               usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                         sh "docker login --username $USERNAME --password $PASSWORD"
                    }
               }
          }

          stage("Docker push") {
               steps {
                    sh "docker push leszko/calculator:${BUILD_TIMESTAMP}"
               }
          }

          stage("Update version") {
               steps {
                    sh "cd Chapter08/sample1 && sed -i 's/{{VERSION}}/${BUILD_TIMESTAMP}/g' calculator.yaml"
               }
          }
          
          stage("Deploy to staging") {
               steps {
                    sh "kubectl config use-context staging"
                    sh "kubectl apply -f Chapter08/sample1/hazelcast.yaml"
                    sh "kubectl apply -f Chapter08/sample1/calculator.yaml"
               }
          }

          stage("Acceptance test") {
               steps {
                    sleep 60
                    sh "cd Chapter08/sample1 && chmod +x acceptance-test.sh && ./acceptance-test.sh"
               }
          }

          stage("Release") {
               steps {
                    sh "kubectl config use-context production"
                    sh "kubectl apply -f Chapter08/sample1/hazelcast.yaml"
                    sh "kubectl apply -f Chapter08/sample1/calculator.yaml"
               }
          }
          stage("Smoke test") {
              steps {
                  sleep 60
                  sh "cd Chapter08/sample1 && chmod +x smoke-test.sh && ./smoke-test.sh"
              }
          }
     }
}
